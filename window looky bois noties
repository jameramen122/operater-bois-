---WSMAN---
<oh really? O.o *sweats*>
get-item WSMAN:\localhost\client\trustedhost

queries the trusted host


(get-item WSMAN:\localhost\client\trustedhost).values

gets the info on the trusted hosts


get-item WSMAN:\localhost\client\trustedhost -value "10.2.0.8,notchyna.ch" -concatenate

queries a very particular field in this, without concatenate it overwrites the old file/ A URL, or an IP can be used for the value field. :3




---invoke-command---

invoke-command -computername pwnd_host { restart-computer -force } -AsJob
#this command runs a command on a different computer in your same network

receve-job 1
#receves job info based off of jobs.

invoke-command -computername workstation3,server4,webserver5 C:\windows\fondevil.ps1
#sends the ps1 file to each of the selected computers then runs it, sending the ouput back to the screen after the scripts run.

New-PSSession -computername <the computers name>
#gets a powershell session on another computer, its like ssh-ing into a unix computer.

---ren---
short for re-name 
can be used to change the name and extension of a file


============================================ T H E   W I N D O W S   R E G I S T R Y ===================================================

hive keys are like root directorys or a rolladex
  under that are regestry keys, or sub-key, like a directory in a directory. a key can be a sub-key/ hive keys cannot.
    in the subkey there are actual entrys in the regestry. a 'regestry value' as windows calls it. I call it a 'reg entry'



hkey_classes_root --> the classes root is a symbolic link under   'computer\hkey_local_machine\software\classes'





============================================ T H E   N T F S  S Y S T E M ==============================================================

windows and unix made this at the same time.
the reasons a new one is not out;
lazy developers
there is no reason to break NTFS,
re-fs is a thing, but it cost money... and a lot of jank powershell shit

before NTFS there was FAT, the File Allocation Table.
which can hold 4 ENTIRE file partitions
E-FAT and FAT32 can hold more but there not as good as NTFS.
NTFS allows up to 26 primary partition on one drive.
NTFS also added alternet data stream. --> Gui's can't see them. so you have to use cmd and shit.
If the drive is full --> NTFS will overwrite what hasn't been used in a while.
when it overwrites too much the kernel will shit itself and cri and the server will crash. :3


========================================== T H E   B O O T   P R O C E S S   A N D   B C D E D I T ============================================


--- The windows NT 6 boot process with system files. ---
 
   POST --> (does the hardware exist?)
    |
    |
    V
BIOS/UEFI
    |
    |
    V
   MBR
    |
    |
    V
Volume Boot Sector
    |
    |
    V
Bootmgr(.exe) <--data-- BCD boot config data
    |
    |------------------\
    V                  |
 Winload            Winresume.exe <--data-- Hiberfil.sys
    |
    |
    V
Ntoskml.exe
    |
    |-----------------------\------------------\------------------\-------------------\------------------\
    |                       |                  |                  |                   |                  |
    V                     HAL DLL     Load Directory hive  Load Device Drivers     Process        Start Paging
 Smss.exe                                                                          Manager        Pagefile.sys <---data---> Pagefile.sys
    |                                                                                 |
    |                                                                            System Idle
    V                           __________________                                 Process 
Csrss.exe                      / Userinit  calls  \
    |---------------\         |Explorer then dies |
    |               |         |Leaving explorer   |
    V               V         |To winlogon.       |
Wininit.exe    Winlogon.exe ----> Userinit.exe ----> Explorer.exe
    |--------------\
    |              |
    V              V
Services.exe   Lsass.exe
    |--------------\--------------\---Svchost.exe - - - > > > (Svchost.exe runs multiple copies for what is needed to run the system at that point :3)
    |              |              |
    V              V              V
Svchost.exe    Svchost.exe    Svchost.exe
    
    
POST --> does the hardware exist?
BIOS --> uses MBR, starts the Bootmgr. BIOS is the older version of UEFI.
UEFI --> uses GPT (global partition table), starts the Bootmgrfw.efi, loaded into flash memory and is much faster. you can update firmware without loading the OS and there is the secure boot. verifys Drivers and ensures if the system has been changed while it is off\not powered on. when Secure boot is enabled, it is protected in almost every way. this is preferd over BIOS.
MBR --> the master boot record, the first 512 bytes on the driver. points to the Bootmgr.
bootmgr.exe --> manages what is loaded at startup. 
  -whinresume.exe --> is for hibernation, takes everything in ram, EVERYTHING. and writes it to a disk. it then powers off the machine very slowly. when the system is powered on again. it calls Hiberfil.sys to load the system.
Winload.exe -->

Ntoskrnl.exe --> this is the windows Kernal, Winload calls the kernal and from there it takes control.

Smss.exe
Csrss.exe --> starts Wininit.exe and the Winlogon.exe

--- wininit.exe ---
Wininit.exe -->
Lsass.exe -->
Services.exe --> loads Svchost.exe, there are many launched





--- winlogon.exe ---
Winlogon.exe -->
Userinit.exe -->
Explorer.exe -->

coldboot --> (system restarts shut off the entire os)
hotboot --> (the os stays active as the rest of the machine restarts)





    
    
    
    
    
    
    
    






















